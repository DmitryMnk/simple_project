version: '3.8'

services:
  db:
    container_name: pgsql_${PROJECT_PREFIX}
    image: postgres:12.5-alpine
    hostname: ${POSTGRES_HOST}
    restart: always
    ports:
      - "9432:${POSTGRES_PORT}"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_NAME}
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    container_name: redis_${PROJECT_PREFIX}
    build:
      context: ./app/docker/containers/redis
      dockerfile: ./Dockerfile
      args:
        REDIS_HOST: "${REDIS_HOST}"
        REDIS_PORT: 6379
        REDIS_USER: "${REDIS_USER}"
        REDIS_PASSWORD: "${REDIS_PASSWORD}"
    hostname: "${REDIS_HOST}"
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - ./app/docker/data/redis:/data:rw
      - ./app/docker/containers/redis/redis.conf:/usr/local/etc/redis/redis.conf

  web:
    container_name: web_${PROJECT_PREFIX}
    build:
      dockerfile: app/Dockerfile
    restart: always
    ports:
      - "${HTTP_PORT}:${HTTP_PORT}"

    depends_on:
      - db
      - redis
    volumes:
      - ./app:/app
    env_file:
      - .env

  celery:
    build:
      dockerfile: app/Dockerfile
    command: poetry run celery -A app.core.celery.app:celery_app worker --loglevel=info
    depends_on:
      - redis

  celery-beat:
    build:
      dockerfile: app/Dockerfile
    command: poetry run celery -A app.core.celery.app:celery_app beat --loglevel=info
    depends_on:
      - redis

volumes:
  postgres_data:
